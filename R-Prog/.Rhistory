install.packages("statnet")
library("statnet")
data("florentine")
data("florentine")
summary(flomarriage)
model1 <- ergm(flomarriage ~ edges)
summary(model1)
model2 <- ergm(flomarriage ~ edges + triangles)
summary(model2)
model2 <- ergm(flomarriage ~ edges + triangles)
summary(model2)
model2 <- ergm(flomarriage ~ edges + triangles)
summary(model2)
model2 <- ergm(flomarriage ~ edges + triangles)
summary(model2)
quit
q()
load("C:\\Users\\Rakudajin\\Desktop\\Coursera\\Anal Edge\\.RData")
ls
ls()
dwn
dnw
wine = read.csv("wine.csv")
q()
x <- 4
class(x)
x = 4
4 = x
4 -> x
5 -> x
x <- c(4, "a", TRUE)
class(x)
dasdsfdagadsg
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
c = rbind(x, y)
size(c)
dim(c)
c
x <- list(2, "a", "b", TRUE)
x[[1]]
x[1]
class(x[[1]])
dim(x[[1]])
dim(x[1])
dim(x)
x <- 1:4
y <- 2:3
x + y
x + y -> c
class(c)
x <- c(3, 5, 1, 10, 12, 6)
class(x)
x[x < 6] == 0
x[x <= 5] <- 0
read.csv(hw1_data.csv)
read.csv("hw1_data.csv")
read.csv("hw1_data.csv")
setwd("C:/Users/Rakudajin/Desktop/Coursera/DA/R-Prog")
read.csv("hw1_data.csv")
data1 = read.csv("hw1_data.csv")
str(data1)
data1[1:2]
data1[,1:2]
data1[1:2,]
data1[-2:-1,]
data1[152:153,]
data1@Ozone[47]
data1@Ozone
data1$Ozone[47]
data1$Ozone
summary(data1$Ozone)
data1$Ozone[is.na]
bad = is.na(data1$Ozone)
str(bad)
data1$Ozone[bad]
x =data1$Ozone[bad]
summary(data1$Ozone)
summary(data1$Ozone[!bad])
a = data1[Ozone > 31]
a = data1[data1$Ozone > 31]
a = data1$Ozone > 31
b = data1[a]
b = data1[a][]
b = data1[a, ]
a = data1[data1$Ozone > 31, ]
b = a[a$Temp > 90, ]
summary(b)
summary(data1[Month == 6, ])
summary(data1[data1$Month == 6, ])
summary(data1[data1$Month == 5, ])
x = download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
download.file(https:\\d396qusza40orc.cloudfront.net\getdata%2Fdata%2Fss06hid.csv)
dataurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(dataurl, destfile = "./data/down.csv")
download.file(dataurl, destfile = "./down.csv")
x = read.csv(down.csv)
x = read.csv("down.csv")
str(x)
x[x$VAL == 24]
x[x$VAL == 24,]
summary(x[x$VAL == 24,])
str(x[x$VAL == 24,])
x[x$VAL == 1,]
clearx = x[!is.na(x$VAL)]
clearx = x[!is.na(x$VAL),]
clearx = clearx[clearx$VAL == 24]
clearx = clearx[clearx$VAL == 24,]
clearx = x[!is.na(x$VAL),]
y = clearx[clearx$VAL == 24,]
tsble(x$VAL)
table(x$VAL)
summary(x$FES)
x$FES
x = read.xls2("getdata-data-DATA.gov_NGAP.xlsx ")
x = read.xls2("getdata-data-DATA.gov_NGAP.xlsx")
library(xlsx)
package(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages('rJava')
library(xlsx)
install.packages('xlsxjars')
library(xlsx)
library(xlsx2)
library(xlsx)
x = read.xls2("getdata-data-DATA.gov_NGAP.xlsx")
x = read.xlsx2("getdata-data-DATA.gov_NGAP.xlsx")
?read.xlsx2
x = read.xlsx2("getdata-data-DATA.gov_NGAP.xlsx", 1)
str(x)
x
sum(x$Zip*x$Ext,na.rm=T)
x = read.xlsx2("getdata-data-DATA.gov_NGAP.xlsx", 1, rowIndex = 18:23, colIndex = 7:15)
x = read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", 1, rowIndex = 18:23, colIndex = 7:15)
sum(x$Zip*x$Ext,na.rm=T)
x
x = read.xlsx("getdata-data-DATA.gov_NGAP.xlsx")
x = read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", 1)
str(x)
x
y = read.xlsx2("getdata-data-DATA.gov_NGAP.xlsx", 1)
y = read.xml("getdata-data-restaurants.xml")
library(XML)
install.packages('XMK')
install.packages('XML')
library(XML)
y = xmlRoot("getdata-data-restaurants.xml")
links = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc = xmlTreeParse(links, useInternal = TRUE)
links = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc = xmlTreeParse(links, useInternal = TRUE)
rootNode = xmlRoot(doc)
rootnode
roo
rootNode
names(rootNode)
rootNode[1]
rootNode[[1]
]
rootNode[[[1]]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[1]]
rootNode[[1]][[1]][[2]]
rootNode[[1]][[]][[2]]
xmlSApply(rootNode, xmlValue)
xmlSApply(rootNode, //name, xmlValue)
xmlSApply(rootNode, "//name", xmlValue)
rootNode[[1]][[1]][[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode, "///name", xmlValue)
xpathSApply(rootNode, "//name", xmlValue)
table(xpathSApply(rootNode, "//name", xmlValue))
sort(table(xpathSApply(rootNode, "//name", xmlValue)))
sort(table(xpathSApply(rootNode, "//zipcode", xmlValue)))
?fread()
?fread
library(data.table)
install.packages('data.table')
library(data.table)
?fread
fread("getdata-data-ss06pid.csv")
fread("getdata-data-ss06pid.csv") -> DT
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean), dig = 5)
?system.time
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
options(digits=6)
system.time(mean(DT$pwgtp15,by=DT$SEX))
options(digits=10)
system.time(mean(DT$pwgtp15,by=DT$SEX))
print (system.time(mean(DT$pwgtp15,by=DT$SEX)), digits = 10)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15) mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15)
)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean)
)
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean)
)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
x = read.csv("down.csv")
x$FEV
x$FES
table(x$FES)
summary(x$FES)
str(x$FES)
